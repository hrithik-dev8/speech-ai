{"ast":null,"code":"import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n  const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n  const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n  const feedbackLength = convertedFeedback.length;\n  const feedforwardLength = convertedFeedforward.length;\n  const minLength = Math.min(feedbackLength, feedforwardLength);\n  if (convertedFeedback[0] !== 1) {\n    for (let i = 0; i < feedbackLength; i += 1) {\n      convertedFeedforward[i] /= convertedFeedback[0];\n    }\n    for (let i = 1; i < feedforwardLength; i += 1) {\n      convertedFeedback[i] /= convertedFeedback[0];\n    }\n  }\n  const bufferLength = 32;\n  const xBuffer = new Float32Array(bufferLength);\n  const yBuffer = new Float32Array(bufferLength);\n  const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n  const numberOfChannels = renderedBuffer.numberOfChannels;\n  for (let i = 0; i < numberOfChannels; i += 1) {\n    const input = renderedBuffer.getChannelData(i);\n    const output = filteredBuffer.getChannelData(i);\n    xBuffer.fill(0);\n    yBuffer.fill(0);\n    filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n  }\n  return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n  return (feedback, feedforward) => {\n    const renderedNativeAudioNodes = new WeakMap();\n    let filteredBufferPromise = null;\n    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeAudioBufferSourceNode = null;\n      let nativeIIRFilterNode = getNativeAudioNode(proxy);\n      // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n      const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n      // Bug #9: Safari does not support IIRFilterNodes.\n      if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n        nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n          buffer: null,\n          channelCount: 2,\n          channelCountMode: 'max',\n          channelInterpretation: 'speakers',\n          loop: false,\n          loopEnd: 0,\n          loopStart: 0,\n          playbackRate: 1\n        });\n      } else if (!nativeIIRFilterNodeIsOwnedByContext) {\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n      }\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n      if (nativeAudioBufferSourceNode !== null) {\n        if (filteredBufferPromise === null) {\n          if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n          }\n          const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n          // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n          proxy.context.destination.channelCount,\n          // Bug #17: Safari does not yet expose the length.\n          proxy.context.length, nativeOfflineAudioContext.sampleRate);\n          filteredBufferPromise = (async () => {\n            await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n            const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n            return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n          })();\n        }\n        const filteredBuffer = await filteredBufferPromise;\n        nativeAudioBufferSourceNode.buffer = filteredBuffer;\n        nativeAudioBufferSourceNode.start(0);\n        return nativeAudioBufferSourceNode;\n      }\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n      return nativeIIRFilterNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeAudioNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioNode);\n        }\n        return createAudioNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};","map":{"version":3,"names":["filterBuffer","isOwnedByContext","filterFullBuffer","renderedBuffer","nativeOfflineAudioContext","feedback","feedforward","convertedFeedback","Float64Array","convertedFeedforward","feedbackLength","length","feedforwardLength","minLength","Math","min","i","bufferLength","xBuffer","Float32Array","yBuffer","filteredBuffer","createBuffer","numberOfChannels","sampleRate","input","getChannelData","output","fill","createIIRFilterNodeRendererFactory","createNativeAudioBufferSourceNode","getNativeAudioNode","nativeOfflineAudioContextConstructor","renderInputsOfAudioNode","renderNativeOfflineAudioContext","renderedNativeAudioNodes","WeakMap","filteredBufferPromise","createAudioNode","proxy","nativeAudioBufferSourceNode","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","undefined","buffer","channelCount","channelCountMode","channelInterpretation","loop","loopEnd","loopStart","playbackRate","set","Error","partialOfflineAudioContext","context","destination","start","render","renderedNativeAudioNode","get","Promise","resolve"],"sources":["../../../src/factories/iir-filter-node-renderer-factory.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}